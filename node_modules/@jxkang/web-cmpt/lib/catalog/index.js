'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _modal = require('antd/lib/modal');

var _modal2 = _interopRequireDefault(_modal);

var _spin = require('antd/lib/spin');

var _spin2 = _interopRequireDefault(_spin);

var _row = require('antd/lib/row');

var _row2 = _interopRequireDefault(_row);

var _col = require('antd/lib/col');

var _col2 = _interopRequireDefault(_col);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

require('antd/lib/modal/style');

require('antd/lib/spin/style');

require('antd/lib/row/style');

require('antd/lib/col/style');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _icon = require('../icon');

var _icon2 = _interopRequireDefault(_icon);

var _style = require('./style');

var _style2 = _interopRequireDefault(_style);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
uthor: 谭生虎 TanShenghu tanshenghu@163.com
pdate: 2019-12-15
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @Description: 商城类目组件
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


var noop = function noop(d) {
  return d;
};

var Catalog = function (_React$Component) {
  _inherits(Catalog, _React$Component);

  function Catalog(props) {
    _classCallCheck(this, Catalog);

    var _this = _possibleConstructorReturn(this, (Catalog.__proto__ || Object.getPrototypeOf(Catalog)).call(this, props));

    _this.onReset = function () {
      var datas = _this.state.datas;

      if (datas && datas.length) {
        if (Array.isArray(_this.props.value) && _this.props.value.length) {
          _this.initValues();
        }
      } else {
        return datas;
      }
    };

    _this.initValues = function () {
      var _this$props = _this.props,
          fetchIdKey = _this$props.fetchIdKey,
          dataValue = _this$props.dataValue,
          value = _this$props.value;

      var fCount = 0;
      value.forEach(function (item, idx) {
        var selectd = _this.state.selectd;

        _this.fetchData({
          param: _defineProperty({}, fetchIdKey, item),
          cataIndex: idx + 1,
          callback: function callback() {
            fCount += 1;

            if (fCount === value.length) {
              var datas = _this.state.datas;

              value.forEach(function (vv, index) {
                selectd[index] = datas[index].find(function (iv) {
                  return iv[dataValue] === vv;
                });
              });
              // 选中的数据
              _this.setState({
                selectd: selectd
              });
            }
          }
        });
      });
    };

    _this.fetchData = function () {
      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          _ref$param = _ref.param,
          param = _ref$param === undefined ? {} : _ref$param,
          _ref$cataIndex = _ref.cataIndex,
          cataIndex = _ref$cataIndex === undefined ? 0 : _ref$cataIndex,
          _ref$callback = _ref.callback,
          callback = _ref$callback === undefined ? noop : _ref$callback;

      var _this$props2 = _this.props,
          url = _this$props2.url,
          params = _this$props2.params,
          onDeal = _this$props2.onDeal,
          fetchIdKey = _this$props2.fetchIdKey;
      var _this$state = _this.state,
          parameter = _this$state.parameter,
          datas = _this$state.datas;

      var fetchParams = _extends({}, parameter, param, params);

      // 具体业务化处理 默认父id为0
      if (fetchIdKey) {
        fetchParams[fetchIdKey] = fetchParams[fetchIdKey] || 0;
      }

      url(fetchParams).then(function (resModel) {
        if (resModel) {
          var Model = onDeal(resModel);
          datas[cataIndex] = Model;
          _this.setState({ datas: datas }, function () {
            callback(Model, cataIndex);
          });
        }
        _this.setState({ loading: false });
      });
    };

    _this.handleChange = function (lineData, cataIndex) {
      var _this$props3 = _this.props,
          onOk = _this$props3.onOk,
          leafKeyName = _this$props3.leafKeyName,
          dataValue = _this$props3.dataValue,
          _this$props3$fetchIdK = _this$props3.fetchIdKey,
          fetchIdKey = _this$props3$fetchIdK === undefined ? 'id' : _this$props3$fetchIdK,
          onChange = _this$props3.onChange;
      var datas = _this.state.datas;
      var selectd = _this.state.selectd;


      selectd = selectd.slice(0, cataIndex);
      selectd[cataIndex] = lineData;
      _this.state.datas = datas.slice(0, cataIndex + 1);

      _this.setState({ selectd: selectd });

      onChange(lineData[dataValue], lineData, cataIndex);

      if (lineData[leafKeyName]) {
        // 判断是否叶子节点
        _this.fetchData({ param: _defineProperty({}, fetchIdKey, lineData[dataValue]), cataIndex: cataIndex + 1 });
      } else {
        onOk(selectd);
      }
    };

    _this.handleOk = function () {
      var onOk = _this.props.onOk;
      var selectd = _this.state.selectd;

      onOk(selectd);
    };

    _this.category = function () {
      var _this$props4 = _this.props,
          width = _this$props4.width,
          className = _this$props4.className,
          height = _this$props4.height,
          dataIndex = _this$props4.dataIndex,
          dataValue = _this$props4.dataValue,
          theme = _this$props4.theme;
      var _this$state2 = _this.state,
          datas = _this$state2.datas,
          selectd = _this$state2.selectd,
          level = _this$state2.level,
          loading = _this$state2.loading;

      var isListEmpty = function isListEmpty(v) {
        return !(Array.isArray(v) && v.length);
      };
      var loopCount = new Array(level).fill('');
      var levelText = ['一', '二', '三', '四', '五'];

      return _react2.default.createElement(
        'section',
        { className: (0, _classnames3.default)(_style2.default['theme_' + theme], className), style: width ? { width: width } : null },
        _react2.default.createElement(
          _spin2.default,
          { tip: 'Loading...', delay: 300, spinning: loading },
          _react2.default.createElement(
            _row2.default,
            null,
            loopCount.map(function (item, idx) {
              return _react2.default.createElement(
                _col2.default,
                { key: idx, span: Math.floor(24 / level) },
                _react2.default.createElement(
                  'div',
                  { className: _style2.default.item_box, style: idx === 0 ? { marginLeft: 0 } : idx === loopCount.length - 1 ? { marginRight: 0 } : { marginLeft: 10, marginRight: 10 } },
                  _react2.default.createElement(
                    'h3',
                    null,
                    '\u9009\u62E9',
                    levelText[idx],
                    '\u7EA7\u5206\u7C7B'
                  ),
                  _react2.default.createElement(
                    'ul',
                    { className: _style2.default.list_ul, style: height ? { height: height } : null },
                    isListEmpty(datas[idx]) ? null : datas[idx].map(function (items, index) {
                      return _react2.default.createElement(
                        'li',
                        {
                          key: index,
                          className: (0, _classnames3.default)(_style2.default.list_item, _defineProperty({}, _style2.default.current, selectd[idx] && selectd[idx][dataValue] === items[dataValue])),
                          title: items[dataIndex]
                        },
                        _react2.default.createElement(
                          'span',
                          { onClick: function onClick() {
                              return _this.handleChange(items, idx);
                            } },
                          _react2.default.createElement(
                            'code',
                            { className: _style2.default.catalog_code },
                            items.id
                          ),
                          items[dataIndex]
                        )
                      );
                    })
                  ),
                  idx === loopCount.length - 1 ? null : _react2.default.createElement(_icon2.default, { type: 'Group10', className: _style2.default.right_icon, size: 'xs' })
                )
              );
            })
          )
        )
      );
    };

    _this.state = {
      parameter: {},
      datas: [], // 二维数组
      selectd: [],
      level: 3,
      loading: true
    };
    return _this;
  }

  _createClass(Catalog, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      this.fetchData({
        callback: function callback() {
          if (Array.isArray(_this2.props.value) && _this2.props.value.length) {
            _this2.initValues();
          }
        }
      });
    }

    /**
     * reset 回到默认状态
     */


    /**
     * 有初始默认值时
     */


    /**
     * 拉接口数据
     */


    /**
     * 点击选择类目事件
     */


    /**
     * 确定事件
     */

  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          visible = _props.visible,
          width = _props.width,
          onCancel = _props.onCancel,
          title = _props.title,
          _props$okType = _props.okType,
          okType = _props$okType === undefined ? 'primary' : _props$okType;


      return typeof visible === 'boolean' ? _react2.default.createElement(
        _modal2.default,
        {
          closeIcon: true,
          visible: visible,
          title: title,
          width: width + 50,
          cancelText: '\u53D6\u6D88',
          okText: '\u4FDD\u5B58',
          onCancel: onCancel,
          onOk: this.handleOk,
          okType: okType
        },
        this.category()
      ) : _react2.default.createElement(
        _react2.default.Fragment,
        null,
        this.category()
      );
    }
  }]);

  return Catalog;
}(_react2.default.Component);

Catalog.defaultProps = {
  width: 520,
  theme: 'blue',
  dataIndex: 'label',
  dataValue: 'id',
  leafKeyName: 'isleaf',
  title: '商品类目选择',
  params: {},
  onDeal: noop,
  onOk: noop,
  onCancel: noop,
  onChange: noop
};

/**
 * 辅助调用方，从tree中过滤出类目id
 */
var getIds = function getIds(data) {
  var ids = [];
  function loop(d) {
    if (d.id) {
      ids.push(d.id);
    }
    if (d.parent) {
      loop(d.parent);
    }
  }
  loop(data);
  return ids;
};

Catalog.getIds = getIds;

exports.default = Catalog;
module.exports = exports['default'];