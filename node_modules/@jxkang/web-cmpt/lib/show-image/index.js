'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _modal = require('antd/lib/modal');

var _modal2 = _interopRequireDefault(_modal);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

require('antd/lib/modal/style');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _style = require('./style');

var _style2 = _interopRequireDefault(_style);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
uthor: 谭生虎 TanShenghu tanshenghu@163.com
pdate: 2020-03-10
escription: 图片弹框放大预览组件
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


var ShowImage = function (_React$Component) {
  _inherits(ShowImage, _React$Component);

  function ShowImage(props) {
    _classCallCheck(this, ShowImage);

    var _this = _possibleConstructorReturn(this, (ShowImage.__proto__ || Object.getPrototypeOf(ShowImage)).call(this, props));

    _this.findImg = function (el) {
      var oimg = el.currentTarget.getElementsByTagName('img')[0];
      if (oimg) {
        _this.setState({ imgSrc: oimg.getAttribute('src') });
      }
    };

    _this.onShowImgDailog = function (el) {
      _this.findImg(el);
      _this.setState({ visible: true });
    };

    _this.state = {
      visible: false,
      imgSrc: null
    };
    return _this;
  }

  _createClass(ShowImage, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          children = _props.children,
          className = _props.className,
          modalClassName = _props.modalClassName,
          _props$title = _props.title,
          title = _props$title === undefined ? '图片预览' : _props$title,
          _props$width = _props.width,
          width = _props$width === undefined ? 520 : _props$width;
      var _state = this.state,
          visible = _state.visible,
          imgSrc = _state.imgSrc;


      return _react2.default.createElement(
        _react.Fragment,
        null,
        children ? _react2.default.createElement(
          'div',
          { ref: function ref(el) {
              return _this2.box = el;
            }, className: (0, _classnames2.default)('show-image', className), onClick: this.onShowImgDailog },
          children
        ) : null,
        _react2.default.createElement(
          _modal2.default,
          {
            visible: visible,
            onCancel: function onCancel() {
              return _this2.setState({ visible: false });
            },
            className: modalClassName,
            footer: null,
            title: title,
            width: width
          },
          _react2.default.createElement('img', { src: imgSrc, style: { width: '100%', maxHeight: '92vh' }, alt: title, title: title })
        )
      );
    }
  }]);

  return ShowImage;
}(_react2.default.Component);

exports.default = ShowImage;
module.exports = exports['default'];