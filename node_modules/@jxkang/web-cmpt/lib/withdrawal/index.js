'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _modal = require('antd/lib/modal');

var _modal2 = _interopRequireDefault(_modal);

var _message2 = require('antd/lib/message');

var _message3 = _interopRequireDefault(_message2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /**
uthor: 谭生虎 TanShenghu tanshenghu@163.com
pdate: 2020-03-26
escription: 提现 组件



require('antd/lib/modal/style');

require('antd/lib/message/style');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _formControl = require('../form-control');

var _formControl2 = _interopRequireDefault(_formControl);

var _utils = require('@jxkang/utils');

var _style = require('./style');

var _style2 = _interopRequireDefault(_style);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * merPriv   用户私有域
 * 商户业务域 p_m:pc-m端,  p_b:pc-b端, p_shop:pc-服务商端,  m_h5:m端-h5
 * requestType: P、 M
 */

var noop = function noop() {};
function Withdrawal(_ref) {
  var _ref$bankUrl = _ref.bankUrl,
      bankUrl = _ref$bankUrl === undefined ? function (reqModel) {
    return (0, _utils.$get)('/settleservice/hf/pay-c/user-bank-list', reqModel);
  } : _ref$bankUrl,
      _ref$url = _ref.url,
      url = _ref$url === undefined ? function (reqModel) {
    return (0, _utils.$post)('/settleservice/trade/withdraw', reqModel);
  } : _ref$url,
      _ref$enableUrl = _ref.enableUrl,
      enableUrl = _ref$enableUrl === undefined ? function (reqModel) {
    return (0, _utils.$get)('/settleservice/fund-account/show', reqModel);
  } : _ref$enableUrl,
      _ref$configUrl = _ref.configUrl,
      configUrl = _ref$configUrl === undefined ? function (reqModel) {
    return (0, _utils.$get)('/settleservice/withdraw/config', reqModel);
  } : _ref$configUrl,
      visible = _ref.visible,
      _ref$minAmount = _ref.minAmount,
      minAmount = _ref$minAmount === undefined ? 1 : _ref$minAmount,
      _ref$maxAmount = _ref.maxAmount,
      maxAmount = _ref$maxAmount === undefined ? 1 : _ref$maxAmount,
      _ref$onCancel = _ref.onCancel,
      onCancel = _ref$onCancel === undefined ? noop : _ref$onCancel,
      _ref$onOk = _ref.onOk,
      onOk = _ref$onOk === undefined ? noop : _ref$onOk,
      clientName = _ref.clientName,
      _ref$setParams = _ref.setParams,
      setParams = _ref$setParams === undefined ? function (p) {
    return {
      amount: p.amount,
      merPriv: clientName || 'p_shop',
      requestType: 'P',
      thirdBankCardId: p.currentBank.bindCardId
    };
  } : _ref$setParams;

  var _useState = (0, _react.useState)({ minAmount: minAmount, amount: null, maxAmount: maxAmount, currentBank: {} }),
      _useState2 = _slicedToArray(_useState, 2),
      amountValue = _useState2[0],
      setAmount = _useState2[1];

  var _useState3 = (0, _react.useState)({}),
      _useState4 = _slicedToArray(_useState3, 2),
      detail = _useState4[0],
      setDetail = _useState4[1];

  var _useState5 = (0, _react.useState)([]),
      _useState6 = _slicedToArray(_useState5, 2),
      bankList = _useState6[0],
      setBankList = _useState6[1];

  (0, _react.useEffect)(function () {
    /**
     * 银行数据列表
     */
    bankUrl().then(function (resModel) {
      if (Array.isArray(resModel)) {
        setBankList(resModel);
      }
    });
    /**
     * 可取现额度
     */
    enableUrl().then(function (resModel) {
      if (resModel) {
        Object.assign(detail, resModel);
        amountValue.maxAmount = resModel.balanceAccount;
        setDetail(_extends({}, detail));
        setAmount(_extends({}, amountValue));
      }
    });
    /**
     * 提现手续费标准
     */
    configUrl().then(function (resModel) {
      if (resModel) {
        Object.assign(detail, resModel);
        setDetail(_extends({}, detail));
      }
    });
  }, []);

  /**
   * 计算要扣除的金额
   */
  var computeOffAmount = function computeOffAmount() {
    var sumVal = detail.withdrawServiceRate * 0.01 * amountValue.amount + detail.withdrawFeeAmount;
    if (sumVal.toString) {
      var n = sumVal.toString().match(/\.\d{2}(\d)/);
      var needVal = (/[^\.]+\.\d{0,2}/.exec(sumVal.toString()) || [])[0];
      if (n && n[1] && needVal) {
        if (n[1] > 4) {
          return (needVal.replace(/\./, '') * 1 + 1).toString().replace(/(\d{2})$/, '.$1');
        }
        return needVal;
      }
    }
    return sumVal;
  };

  /**
   * 确定提现
   */
  var onOkByAmount = function onOkByAmount() {
    if (!amountValue.amount) {
      return _message3.default.warn('请输入提现金额');
    }if (!amountValue.currentBank || !amountValue.currentBank.id) {
      return _message3.default.warn('请选择提现银行卡');
    }
    var params = setParams(amountValue);
    url(params).then(function (resModel) {
      onOk(resModel);
      if (resModel) {
        _modal2.default.confirm({
          title: '系统温馨提示',
          content: '您即将提现中...',
          okText: '立即提现',
          icon: false,
          cancelButtonProps: { style: { display: 'none' } },
          onOk: function onOk() {
            _utils.Common.winOpen({
              type: 'post',
              url: resModel.url,
              params: {
                check_value: resModel.checkValue,
                mer_cust_id: resModel.merCustId,
                version: resModel.version
              }
            });
          }
        });
      }
    });
  };

  return _react2.default.createElement(
    _modal2.default,
    {
      title: '\u63D0\u73B0\u91D1\u989D',
      visible: visible,
      okText: '\u63D0\u73B0',
      onOk: onOkByAmount,
      onCancel: onCancel,
      width: 480
    },
    _react2.default.createElement(
      'div',
      null,
      _react2.default.createElement(_formControl2.default, {
        type: 'number',
        style: { width: 432 },
        placeholder: '\u8BF7\u8F93\u5165\u91D1\u989D',
        className: _style2.default.input,
        trim: true,
        value: amountValue.amount,
        formatter: function formatter(value) {
          return ('\xA5 ' + value).replace(/\B(?=(\d{3})+(?!\d))/g, ',');
        },
        parser: function parser(value) {
          return value.replace(/¥\s?|(,*)/g, '');
        },
        min: amountValue.minAmount,
        max: amountValue.maxAmount,
        onChange: function onChange(v) {
          v = Number(v);
          if (v >= amountValue.minAmount && v <= amountValue.maxAmount) {
            amountValue.amount = v;
            setAmount(_extends({}, amountValue));
          }
        }
      })
    ),
    _react2.default.createElement(
      'p',
      { className: _style2.default.remark_tip },
      '\u53EF\u63D0\u73B0\u91D1\u989D\uFF1A\xA5',
      detail.balanceAccount
    ),
    _react2.default.createElement(
      'h3',
      { className: _style2.default.h3 },
      '\u63D0\u73B0\u5230\u94F6\u884C\u5361'
    ),
    _react2.default.createElement(
      'ol',
      null,
      bankList.map(function (item, idx) {
        return _react2.default.createElement(
          'li',
          { key: idx, className: _style2.default.bank_items },
          _react2.default.createElement(
            'div',
            { className: _style2.default.bank_icon },
            _react2.default.createElement('span', null)
          ),
          _react2.default.createElement(
            'h4',
            { className: _style2.default.bank_name },
            item.bankName
          ),
          _react2.default.createElement(
            'div',
            { className: _style2.default.card_no },
            item.cardNum
          ),
          _react2.default.createElement(
            'div',
            { className: _style2.default.checkbox },
            _react2.default.createElement(_formControl2.default, {
              type: 'checkbox',
              onChange: function onChange(v) {
                amountValue.currentBank = v ? item : {};
                setAmount(_extends({}, amountValue));
              }
            })
          )
        );
      })
    ),
    _react2.default.createElement(
      'p',
      { className: _style2.default.procedures },
      '\u624B\u7EED\u8D39\uFF1A\uFF08\u542B',
      detail.withdrawServiceRate,
      '%\u5E73\u53F0\u670D\u52A1\u8D39+',
      detail.withdrawFeeAmount,
      '\u5143\u63D0\u73B0\u624B\u7EED\u8D39\uFF09',
      amountValue.amount ? _react2.default.createElement(
        'span',
        { className: _style2.default.cut_num },
        '\u5171\u8BA1\uFF1A',
        computeOffAmount()
      ) : null
    )
  );
}

exports.default = Withdrawal;
module.exports = exports['default'];