'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _pagination = require('antd/lib/pagination');

var _pagination2 = _interopRequireDefault(_pagination);

var _table = require('antd/lib/table');

var _table2 = _interopRequireDefault(_table);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /**
uthor: 谭生虎 TanShenghu tanshenghu@163.com
pdate: 2019-12-18
escription: 云仓项目分页 组件
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          */


require('antd/lib/pagination/style');

require('antd/lib/table/style');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames3 = require('classnames');

var _classnames4 = _interopRequireDefault(_classnames3);

var _lang = require('../lang');

var _lang2 = _interopRequireDefault(_lang);

var _style = require('./style');

var _style2 = _interopRequireDefault(_style);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var noop = function noop() {};

var Paginator = function Paginator(_ref) {
  var url = _ref.url,
      _ref$params = _ref.params,
      params = _ref$params === undefined ? {} : _ref$params,
      _ref$onDeal = _ref.onDeal,
      onDeal = _ref$onDeal === undefined ? function (d) {
    return d;
  } : _ref$onDeal,
      _ref$scope = _ref.scope,
      scope = _ref$scope === undefined ? noop : _ref$scope,
      _ref$rowKey = _ref.rowKey,
      rowKey = _ref$rowKey === undefined ? 'id' : _ref$rowKey,
      className = _ref.className,
      columns = _ref.columns,
      _ref$tableConfig = _ref.tableConfig,
      tableConfig = _ref$tableConfig === undefined ? {} : _ref$tableConfig,
      _ref$pageConfig = _ref.pageConfig,
      pageConfig = _ref$pageConfig === undefined ? {} : _ref$pageConfig,
      extra = _ref.extra,
      _ref$posBottom = _ref.posBottom,
      posBottom = _ref$posBottom === undefined ? true : _ref$posBottom,
      children = _ref.children,
      dev = _ref.dev;

  var defaultPageSize = 20;

  /**
   * 分页参数
   */

  var _useState = (0, _react.useState)({ pageSize: defaultPageSize, pageNum: 1 }),
      _useState2 = _slicedToArray(_useState, 2),
      parameter = _useState2[0],
      setParameter = _useState2[1];

  /**
   * 分页列表数据
   */


  var n = Date.now();

  var _useState3 = (0, _react.useState)(dev ? new Array(dev).fill({}).map(function (v, i) {
    v.id = n + i;return v;
  }) : []),
      _useState4 = _slicedToArray(_useState3, 2),
      dataSource = _useState4[0],
      setDataSource = _useState4[1];

  /**
   * 分页总条数
   */


  var _useState5 = (0, _react.useState)(dev || 0),
      _useState6 = _slicedToArray(_useState5, 2),
      total = _useState6[0],
      setTotal = _useState6[1];

  /**
   * 获取分页列表数据
   */


  var getDataList = function getDataList() {
    var p = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    if (url) {
      url(_extends({}, parameter, params, p)).then(function (resModel) {
        if (resModel) {
          var ds = onDeal(resModel.records, resModel);
          if (ds instanceof Promise) {
            ds.then(function (ret) {
              if (!children) {
                setDataSource(ret);
              }
              setTotal(resModel.total || resModel.totalRecordSize);
            });
          } else {
            if (!children) {
              setDataSource(ds);
            }
            setTotal(resModel.total || resModel.totalRecordSize);
          }
        }
      });
    }
  };

  /**
   * 切换每页显示的条数
   */
  var onShowSizeChange = function onShowSizeChange(current, pageSize) {
    parameter.pageNum = current;
    parameter.pageSize = pageSize;
    setParameter(parameter);
    getDataList();
  };

  /**
   * 切换分页 页码
   */
  var handleChangePage = function handleChangePage(current) {
    parameter.pageNum = current;
    setParameter(parameter);
    getDataList();
  };

  (0, _react.useEffect)(function () {
    getDataList();
  }, []);

  var showTotal = function showTotal() {
    return _react2.default.createElement(
      'span',
      { className: _style2.default.page_count },
      '\u5171',
      _react2.default.createElement(
        'var',
        null,
        Math.ceil(total / parameter.pageSize)
      ),
      '\u9875/',
      _react2.default.createElement(
        'var',
        null,
        total
      ),
      '\u6761\u6570\u636E'
    );
  };

  scope({
    fetch: function fetch() {
      var itemParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var mix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

      itemParams.pageNum = 1;
      itemParams.pageSize = defaultPageSize;

      if (mix) {
        Object.assign(parameter, itemParams);
        setParameter(parameter);
      } else {
        parameter = itemParams;
        setParameter(itemParams);
      }
      return getDataList(itemParams);
    }
  });

  return _react2.default.createElement(
    'section',
    { className: className },
    children || _react2.default.createElement(_table2.default, _extends({
      columns: columns,
      dataSource: dataSource,
      pagination: false,
      rowKey: rowKey
    }, tableConfig)),
    _react2.default.createElement(
      'section',
      { className: (0, _classnames4.default)(_style2.default.paginator_box, _defineProperty({}, _style2.default.paginator_bottom, posBottom), _defineProperty({}, _style2.default.paginator_bar_mgn, !posBottom)) },
      _react2.default.createElement(
        'div',
        { className: _style2.default.paginator },
        _react2.default.createElement(_pagination2.default, _extends({
          showSizeChanger: true,
          onShowSizeChange: onShowSizeChange,
          total: total,
          showQuickJumper: true,
          showTotal: showTotal,
          locale: _lang2.default.Pagination,
          onChange: handleChangePage,
          defaultPageSize: defaultPageSize,
          pageSizeOptions: ['10', '20', '50']
        }, pageConfig))
      ),
      extra
    )
  );
};

exports.default = Paginator;
module.exports = exports['default'];