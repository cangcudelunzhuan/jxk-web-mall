'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/* eslint-disable */
var G = window;
var noop = function noop() {};
var class2type = {};
var extend = function extend() {
  var hasOwn = class2type.hasOwnProperty;
  var fnToString = hasOwn.toString;
  var getProto = Object.getPrototypeOf;
  var ObjectFunctionString = fnToString.call(Object);
  var isPlainObject = function isPlainObject(obj) {
    var proto = void 0;var Ctor = void 0;if (!obj || toString.call(obj) !== '[object Object]') {
      return false;
    }proto = getProto(obj);if (!proto) {
      return true;
    }Ctor = hasOwn.call(proto, 'constructor') && proto.constructor;return typeof Ctor === 'function' && fnToString.call(Ctor) === ObjectFunctionString;
  };
  var a = void 0;var b = void 0;var c = void 0;var d = void 0;var e = void 0;var f = void 0;var g = arguments[0] || {};var h = 1;var i = arguments.length;var j = !1;for (typeof g == 'boolean' && (j = g, g = arguments[h] || {}, h++), (typeof g === 'undefined' ? 'undefined' : _typeof(g)) == 'object' || isFunction(g) || (g = {}), h === i && (g = this, h--); h < i; h++) {
    if ((a = arguments[h]) != null) for (b in a) {
      c = g[b], d = a[b], g !== d && (j && d && (isPlainObject(d) || (e = Array.isArray(d))) ? (e ? (e = !1, f = c && Array.isArray(c) ? c : []) : f = c && isPlainObject(c) ? c : {}, g[b] = extend(j, f, d)) : void 0 !== d && (g[b] = d));
    }
  }return g;
};

var Common = function Common() {
  var _this = this;

  _classCallCheck(this, Common);

  this.isType = function (d, t) {
    return t && typeof t === 'string' ? class2type.toString.call(d) === '[object ' + t.replace(/^(\w)/, function (a) {
      return a.toUpperCase();
    }) + ']' : class2type.toString.call(d).replace(/.+(?=\s)\s|]/g, '');
  };

  this.extend = function () {
    return extend.apply(undefined, arguments);
  };

  this.clone = function (data) {
    if (_this.isType(data, 'array')) {
      return extend(true, {}, { data: data }).data;
    } else if (_this.isType(data, 'object')) {
      return extend(true, {}, data);
    }
    return data;
  };

  this.getCookie = function (cName) {
    var reg = new RegExp(cName + '=([^$;]*)');
    var result = reg.exec(document.cookie);
    return result && result.length ? unescape(result[1]) : result;
  };

  this.setCookie = function () {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        key = _ref.key,
        value = _ref.value,
        expire = _ref.expire,
        domain = _ref.domain,
        _ref$path = _ref.path,
        path = _ref$path === undefined ? '/' : _ref$path;

    if (!_this.isType(key, 'undefined') && !_this.isType(value, 'undefined')) {
      var cookie = key + '=' + escape(value) + ';';
      if (domain && _this.isType(key, 'string')) {
        cookie += ' domain=' + domain + ';';
      }
      if (expire) {
        var exp = new Date();
        exp.setTime(exp.getTime() + expire * 60 * 1000);
        cookie += ' expires=' + exp.toGMTString() + ';';
      }
      cookie += ' path=' + path;
      document.cookie = cookie;
    } else {
      console.warn('key,value参数必传');
    }
  };

  this.delCookie = function (key) {
    var exp = new Date('1970-01-01');
    var value = _this.getCookie(key);
    if (value) {
      document.cookie = key + '=' + escape(value) + '; expires=' + exp.toGMTString();
    }
  };

  this.getUrlParams = function (key) {
    var search = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : G.location.search;

    var reg = new RegExp(key + '=([^&$]+)');
    var ret = reg.exec(search);
    return ret && ret[1];
  };

  this.moneyFormat = function (n) {
    return n && n.toLocaleString();
  };

  this.dateFormat = function (date, t) {
    if (typeof t === 'undefined') {
      t = 'yyyy-mm-dd';
    };if (typeof date === 'string' && typeof t === 'undefined') {
      t = date;date = new Date();
    } else if (/^\d+$/.test('' + date)) {
      date = new Date(+date);
    } else if (date && class2type.toString.call(date) !== '[object Date]') {
      date = new Date(date);
    };if (_this.isType(date) !== 'Date') {
      return date;
    };var e = { "m+": date.getMonth() + 1, "d+": date.getDate(), "h+": date.getHours(), "i+": date.getMinutes(), "s+": date.getSeconds(), "q+": Math.floor((date.getMonth() + 3) / 3), S: date.getMilliseconds() };/(y+)/.test(t) && (t = t.replace(RegExp.$1, (date.getFullYear() + "").substr(4 - RegExp.$1.length)));for (var i in e) {
      new RegExp("(" + i + ")").test(t) && (t = t.replace(RegExp.$1, 1 == RegExp.$1.length ? e[i] : ("00" + e[i]).substr(("" + e[i]).length)));
    }return t;
  };

  this.download = function (data, fileName, type) {
    if (!data) {
      return false;
    }
    var types = {
      excel: 'application/vnd.ms-excel'
    };
    var ndata = new Blob([data], { type: _this.isType(type, 'undefined') ? 'text/plain' : types[type] || type });
    var oa = document.createElement('a');
    oa.download = fileName || '未命名文件';
    oa.style.display = 'none';
    oa.href = _this.isType(data, 'string') && (data.indexOf('//') > -1 || data.indexOf('/') === 0) ? data : URL.createObjectURL(ndata);
    document.body.appendChild(oa);
    oa.click();
    setTimeout(function () {
      document.body.removeChild(oa);
    });
  };

  this.seek = function () {
    var result = [];
    var isFunc = function isFunc(v) {
      return _this.isType(v, 'function');
    };
    return {
      equal: function equal(expression, target) {
        if (isFunc(expression)) expression = expression();
        if (expression) {
          result.push(target);
        }
        return this;
      },
      else: function _else(target) {
        var expression = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

        if (isFunc(expression)) expression = expression();
        if (expression) {
          result.push(target);
        }
        return this;
      },
      get: function get() {
        var once = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

        return once ? result.shift() : result;
      }
    };
  };

  this.getUrlName = function (url) {
    url = '' + url;
    return (url.match(/\/([^\/]+)$/, 'g') || [])[1];
  };

  this.moneyfixed = function (n) {
    var decimal = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;
    var least = arguments[2];

    var vnc = ('' + n).replace(/-?\d+\.?/, '');
    var n2 = Number(n);
    var nn = 1e-14;

    if (n2.toFixed && n2 === n2) {
      if (least === true) {
        if (vnc.length < decimal) {
          return (n2 + nn).toFixed(decimal);
        } else {
          return n;
        }
      }
      return (n2 + nn).toFixed(decimal);
    }
    return n;
  };

  this.money2fixed = function (n, least) {
    return _this.moneyfixed(n, 2, least);
  };

  this.amountFormat = function (n) {
    var money = '' + n;
    return (/\d/.test(money) ? money.replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,") : n
    );
  };

  this.copyText = function (text) {
    var el = document.createElement('textarea');
    el.value = text;
    el.style = 'position:fixed;width:1px;height:1px;left:-100px;top:-100px;opacity:0';
    G.document.body.appendChild(el);

    el.select();
    G.document.execCommand('Copy');
    setTimeout(function () {
      G.document.body.removeChild(el);
    }, 30);
  };

  this.getRequest = function () {
    var urlQuery = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : G.location.search;

    if (urlQuery.indexOf('//') > -1) {
      urlQuery = urlQuery.replace(/[^?]+\?/, '?');
    }
    urlQuery = urlQuery.slice(1);
    var result = {};
    var kvs = urlQuery.split('&');
    kvs.forEach(function (item) {
      var paramsItems = item.split('=');
      result[paramsItems[0]] = paramsItems[1];
    });
    return result;
  };

  this.queryString = function (params) {
    if (G.URLSearchParams) {
      return new G.URLSearchParams(params).toString();
    }

    var result = '';
    var encode = function encode(v) {
      return typeof v === 'string' ? v.replace(/\&/gm, '%26').replace(/\?/gm, '%3F') : v;
    };
    Object.keys(params).forEach(function (v) {
      result += '&' + v + '=' + encode(params[v]);
    });
    return result.slice(1);
  };

  this.pollQuery = function (_ref2) {
    var func = _ref2.func,
        _ref2$interval = _ref2.interval,
        interval = _ref2$interval === undefined ? 1000 : _ref2$interval,
        _ref2$execCount = _ref2.execCount,
        execCount = _ref2$execCount === undefined ? 1 : _ref2$execCount;

    var loopCount = 0;
    if (_this.isType(func, 'function')) {
      var loop = function loop() {
        loopCount += 1;
        var ret = func();
        if ((execCount === -1 || loopCount <= execCount) && ret !== false) {
          setTimeout(function () {
            loop();
          }, interval);
        }
      };
      loop();
    }
  };

  this.winOpen = function (_ref3) {
    var url = _ref3.url,
        params = _ref3.params,
        _ref3$type = _ref3.type,
        type = _ref3$type === undefined ? 'get' : _ref3$type,
        _ref3$target = _ref3.target,
        target = _ref3$target === undefined ? '_blank' : _ref3$target,
        _ref3$getEle = _ref3.getEle,
        getEle = _ref3$getEle === undefined ? noop : _ref3$getEle;

    var wraper = G.document.createElement('div');
    var myform = G.document.createElement('form');
    var ifm = G.document.createElement('iframe');

    myform.method = type;
    myform.action = url;

    wraper.style = 'position:fixed;left:-100px;top:-100px;opacity:0;width:1px;height:1px;overflow:hidden;';

    var ifmName = 'ifm_' + Date.now() + '_' + Math.ceil(Math.random() * 1000);
    ifm.name = ifmName;

    if (target) {
      myform.target = target === 'ifm' ? ifmName : target;
    }

    // 添加 input hidden
    function appendInput(data, fel) {
      Object.keys(data).forEach(function (item) {
        var itemEl = G.document.createElement('input');
        itemEl.type = 'hidden';
        itemEl.name = item;
        itemEl.value = data[item];
        fel.appendChild(itemEl);
      });
    }

    if (type.toLowerCase() === 'get') {
      var getParams = _this.getRequest(url);
      appendInput(getParams, myform);
    }

    if (_this.isType(params, 'object')) {
      appendInput(params, myform);
    }

    wraper.appendChild(myform);
    wraper.appendChild(ifm);

    G.document.body.appendChild(wraper);

    getEle(wraper);

    setTimeout(function () {
      myform.submit();
    });
    setTimeout(function () {
      G.document.body.removeChild(wraper);
    }, 1500);
  };
}

// 获取url参数


/**
 * 根据url获取名称
 */


// 金额保留N位有效小数


// 保留两位有效小数 一般运用于金额显示   least为true至少两位有效小数


/**
 * 复制文案
 */


/**
 * 获取url所有参数
 */


/**
 * 拼接参数字符串
 */


/**
 * 轮询调用
 */


/**
 * 类似open方法 新打开一个tab界面
 */
;

exports.default = new Common();
module.exports = exports['default'];